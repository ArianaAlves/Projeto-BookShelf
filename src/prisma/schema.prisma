// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./prisma"
}

// ðŸ›‘ IMPORTANTE: ALTERADO para SQLite (requisito do projeto)
datasource db {
  provider = "sqlite"
  // O arquivo do banco de dados serÃ¡ criado no local definido pela variÃ¡vel DATABASE_URL.
  // Por padrÃ£o, serÃ¡ "file:./dev.db" se vocÃª usar o .env padrÃ£o do Prisma.
  url      = env("DATABASE_URL")
}

// ðŸ“š ENUM para Status de Leitura (Requisito 1.6 - Parte 3)
enum ReadingStatus {
  QUERO_LER @default(QUERO_LER) // Valor padrÃ£o para novos livros e migraÃ§Ã£o
  LENDO
  LIDO
  PAUSADO
  ABANDONADO
}

// ðŸ“– MODELO DE GÃŠNERO (Requisito 1.5 - Parte 3)
model Genre {
  // Usando String (cuid) como ID para consistÃªncia
  id    String @id @default(cuid())
  name  String @unique // Garante que nÃ£o haverÃ¡ gÃªneros duplicados
  books Book[] // RelaÃ§Ã£o 1:N com Livros
}

// ðŸ“— MODELO DE LIVRO EXPANDIDO (Requisito 1.4 - Parte 3)
model Book {
  // Campos Existentes na sua lista JSON original:
  // Mudado para String (cuid) para flexibilidade e consistÃªncia com o ID do Genre.
  // Seus IDs de migraÃ§Ã£o (1, 2, 3...) serÃ£o salvos como Strings "1", "2", "3".
  id          String @id @default(cuid()) 
  title       String
  author      String
  
  // Opcionais no JSON original, definidos como Int?
  year        Int?
  pages       Int? // NÃ£o estava no JSON, mas Ã© um campo expandido
  rating      Int? 
  cover       String? // URL da capa
  synopsis    String? // Sinopse completa
  
  // Novos Campos ObrigatÃ³rios (Requisito 1.4):
  status      ReadingStatus @default(QUERO_LER) // Usando o Enum (type-safe)
  currentPage Int           @default(0) // PÃ¡gina atual (para acompanhamento)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Novos Campos Opcionais (Requisito 1.4):
  isbn        String?
  notes       String? @db.Text // @db.Text para notas longas, se o SQLite suportar
  
  // RELACIONAMENTO COM GÃŠNERO:
  // genreName: Campo simples para guardar o nome do gÃªnero (Ãºtil na migraÃ§Ã£o).
  genreName   String 
  // genreId: Chave estrangeira para o relacionamento.
  genreId     String? 
  genre       Genre? @relation(fields: [genreId], references: [id])
}

// Mantido o modelo User existente
model User {
  id    Int     @id @default(autoincrement())
  name  String
  email String  @unique
}